name: Continuous delivery

on:
  release:
    types: [published]

jobs:
  eslint-check:
    name: ESLint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Install dependencies
        run: |
          npm ci
      - name: Run eslint
        run: |
          npm run eslint:check
  dockerlinter-check:
    name: Dockerfile linter check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          npm ci
      - name: Run Dockerfile linter
        run: |
          npm run dockerlinter:check
  vitest-check:
    name: Vite check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Install dependencies
        run: |
          npm ci
      - name: Run Vite
        run: |
          npm run vitest:check
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage_report
  npm-audit-check:
    name: NPM audit check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Run npm audit
        run: |
          npm run npm-audit:check
  build-check:
    name: Build check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Install dependencies
        run: |
          npm ci
      - name: Run build
        run: |
          npm run build:check
  build:
    name: Build
    needs: [eslint-check, vitest-check, build-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
  publish:
    name: Publish
    needs: [build, dockerlinter-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Switch to release tag
        run: |
          git checkout ${{github.event.release.tag_name}}
      - name: Build image
        run: |
          docker build -f ./.github/docker/Dockerfile -t ${{secrets.DOCKER_IMAGE_NAME}}:${{github.event.release.tag_name}} .
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      - name: Publish to Docker Hub with given tag
        run: |
          docker build -f ./.github/docker/Dockerfile -t ${{secrets.DOCKER_IMAGE_NAME}}:${{github.event.release.tag_name}} .
          docker push ${{secrets.DOCKER_IMAGE_NAME}}:${{github.event.release.tag_name}}
      - name: Publish to Docker Hub as latest
        if: ${{github.event.release.target_commitish == 'main'}}
        run: |
          docker tag ${{secrets.DOCKER_IMAGE_NAME}}:${{github.event.release.tag_name}} ${{secrets.DOCKER_IMAGE_NAME}}:latest
          docker push ${{secrets.DOCKER_IMAGE_NAME}}:latest
