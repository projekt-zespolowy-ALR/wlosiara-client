apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    microservice: "{{ .Release.Name }}"
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      microservice: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        microservice: "{{ .Release.Name }}"
    spec:
      containers:
        - name: "{{ .Release.Name }}"
          image: '{{ required "image.dockerRegistry.host is required" .Values.image.dockerRegistry.host }}/{{ .Release.Name }}:{{ .Chart.AppVersion }}'
          imagePullPolicy: Always
          resources:
            limits:
              cpu: {{.Values.resources.limits.cpu}}
              memory: {{.Values.resources.limits.memory}}
            requests:
              cpu: {{.Values.resources.requests.cpu}}
              memory: {{.Values.resources.requests.memory}}
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}"
                  key: PORT
            - name: QUIZ_ID
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}"
                  key: QUIZ_ID
